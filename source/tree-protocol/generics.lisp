(cl:in-package #:cl-grf.tree-protocol)


(defgeneric treep (node))
(defgeneric leafp (node))
(defgeneric maximal-depth (training-parameters))
(defgeneric depth (state))
(defgeneric (setf depth) (new-value state))
(defgeneric training-parameters (state))
(defgeneric (setf training-parameters) (new-value state))
(defgeneric make-node (node-class &rest arguments))
(defgeneric trials-count (training-parameters))
(defgeneric force-tree* (tree))
(defgeneric left-node (tree))
(defgeneric (setf left-node) (new-value tree))
(defgeneric right-node (tree))
(defgeneric (setf right-node) (new-value tree))
(defgeneric minimal-size (training-parameters))
(defgeneric attribute (tree-node))
(defgeneric (setf attribute) (new-value tree-node))
(defgeneric target-data (training-state))
(defgeneric (setf target-data) (new-value training-state))
(defgeneric parallel (training-parameters))
(defgeneric split* (training-parameters training-state leaf))
(defgeneric attribute-value (tree-node))
(defgeneric (setf attribute-value) (new-value tree-node))
(defgeneric attribute-indexes (training-state))
(defgeneric (setf attribute-indexes) (new-value training-state))
(defgeneric make-leaf* (training-parameters training-state))
