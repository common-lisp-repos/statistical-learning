(cl:in-package #:statistical-learning.tree-protocol)


(defgeneric root (model))
(defgeneric treep (node))
(defgeneric leafp (node))
(defgeneric maximal-depth (training-parameters))
(defgeneric depth (state))
(defgeneric make-node (node-class &rest arguments))
(defgeneric trials-count (training-parameters))
(defgeneric force-tree* (tree))
(defgeneric left-node (tree))
(defgeneric (setf left-node) (new-value tree))
(defgeneric right-node (tree))
(defgeneric (setf right-node) (new-value tree))
(defgeneric minimal-size (training-parameters))
(defgeneric attribute (tree-node))
(defgeneric (setf attribute) (new-value tree-node))
(defgeneric target-data (training-state))
(defgeneric (setf target-data) (new-value training-state))
(defgeneric parallel (training-parameters))
(defgeneric split* (training-parameters training-state))
(defgeneric requires-split-p (splitter parameters training-state)
  (:method-combination and))
(defgeneric attribute-value (tree-node))
(defgeneric (setf attribute-value) (new-value tree-node))
(defgeneric attribute-indexes (training-state))
(defgeneric (setf attribute-indexes) (new-value training-state))
(defgeneric make-leaf* (training-parameters))
(defgeneric initialize-leaf (training-parameters training-state leaf))
(defgeneric split-training-state* (parameters state split-array
                                   position size initargs point))
(defgeneric split-training-state-info (splitter parameters state split-array
                                       position size point)
  (:method-combination append :most-specific-last))
(defgeneric pick-split* (splitter parameters state))
(defgeneric fill-split-vector* (splitter parameters state point split-vector))
(defgeneric loss (state))
(defgeneric calculate-loss* (parameters state split-array))
(defgeneric contribute-predictions* (parameters model
                                     data state parallel
                                     &optional leaf-key))
(defgeneric extract-predictions* (parameters state))
(defgeneric weights (state))
(defgeneric support (node))
(defgeneric (setf support) (new-value node))
(defgeneric predictions (node))
(defgeneric (setf predictions) (new-value node))
(defgeneric sums (predictions))
(defgeneric indexes (predictions))
(defgeneric contributions-count (predictions))
(defgeneric training-parameters (predictions))
(defgeneric leaf-for (splitter node data index))
